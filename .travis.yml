---
language: php

# branch blocklist
branches:
  except:
    - documentation
    - gh-ops

# setup services
services:
  - mysql
  - postgresql

# Default matrix overlay.
matrix:
  include:
    - php: 5.2
      dist: precise
      env: DB=mysql
    - php: 5.2
      dist: precise
      env: DB=postgres
    - php: 5.3
      dist: precise
      env: DB=mysql
    - php: 5.3
      dist: precise
      env: DB=postgres
    - php: 5.4
      env: DB=mysql
    - php: 5.4
      env: DB=postgres
    - php: 5.5
      env: DB=mysql
    - php: 5.5
      env: DB=postgres
    - php: 5.6
      env: DB=mysql
    - php: 5.6
      env: DB=postgres
    - php: 7.0
      if: branch != php5only
      env: DB=mysql
    - php: 7.0
      if: branch != php5only
      env: DB=postgres
    - php: 7.1
      if: branch != php5only
      env: DB=mysql
    - php: 7.1
      if: branch != php5only
      env: DB=postgres
    - php: 7.2
      if: branch != php5only
      env: DB=mysql
    - php: 7.2
      if: branch != php5only
      env: DB=postgres
    - php: 7.3
      if: branch != php5only
      env: DB=mysql
    - php: 7.3
      if: branch != php5only
      env: DB=postgres
    - php: nightly
      if: branch != php5only
      env: DB=mysql
    - php: nightly
      if: branch != php5only
      env: DB=postgres

cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - sudo apt-get update > /dev/null
  - source ./tests/setupenv.sh

install:
  # XDebug for PHP 5.2x
  - sh -c "if [ '$XDebug' = '1' ]; then pear install mail Mail_Mime; fi"
  - mv ${HOME}/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ${HOME}/xdebug.ini || return 0
  # Composer Support PHP 5.3.2+
  - sh -c "if [ '$Composer' = '1' ]; then curl -s http://getcomposer.org/installer | php; fi"
  - sh -c "if [ '$Composer' = '1' ]; then php composer.phar install --no-interaction; fi"

before_script:
  - source ./tests/setphpunit.sh

script:
  - cp ${HOME}/xdebug.ini ${HOME}/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini || return 0
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -c 'DROP DATABASE IF EXISTS snort;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -c 'CREATE DATABASE snort;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE IF NOT EXISTS snort;'; fi"
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -d snort -f sql/create_base_tbls_pgsql.sql; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql snort < sql/create_base_tbls_mysql.sql; fi"
  - sh -c "if [ '$DB' = 'postgres' ]; then psql -d snort -f sql/create_base_tbls_pgsql_extra.sql; fi"
  - php -f index.php
  - ./tests/utf-8lint.sh
  - which phpunit
  # Use system phpunit
  - sh -c "if [ '$ComPU' = '0' ]; then phpunit --version; fi"
#  - sh -c "if [ '$ComPU' = '0' ] && [ '$XDebug' = '1' ]; then php -d xdebug.profiler_enable=on `which phpunit` -c phpunit.xml.dist; fi"
#  - sh -c "if [ '$ComPU' = '0' ] && [ '$XDebug' = '0' ]; then phpunit -c phpunit.xml.dist; fi"
  # Use composer phpunit
  - sh -c "if [ '$ComPU' = '1' ]; then vendor/bin/phpunit --version; fi"
#  - sh -c "if [ '$ComPU' = '1' ]; then vendor/bin/phpunit -c phpunit.xml.dist; fi"
  - $PUX -c phpunit.xml.dist
  - rm ${HOME}/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini || return 0

after_success:
  # Coveralls 1.x Support PHP 5.3+
  - sh -c "if [ '$Composer' = '1' ] && [ '$Coveralls' = '1' ]; then vendor/bin/coveralls --exclude-no-stmt -v; fi"
  # Coveralls 2.x Support PHP 5.5+
  - sh -c "if [ '$Composer' = '1' ] && [ '$Coveralls' = '2' ]; then vendor/bin/php-coveralls --exclude-no-stmt -v; fi"
...
