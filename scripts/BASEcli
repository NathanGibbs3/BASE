#!/usr/bin/perl -w
# Basic Analysis and Security Engine (BASE)
# Copyright (C) 2019-2023 Nathan Gibbs
# Copyright (C) 2004 BASE Project Team
# Copyright (C) 2000 Carnegie Mellon University
#
#   For license info: See the file 'base_main.php'
#
#       Project Lead: Nathan Gibbs
# Built upon work by: Kevin Johnson & the BASE Project Team
#                     Roman Danyliw <rdd@cert.org>, <roman@danyliw.com>
#
#            Purpose: stand-alone status and event/dns/whois cache maintenance
#
#          Author(s): Nathan Gibbs
#                     Kevin Johnson
#
# Usage: ./base_maintenance.pl <command>
# Valid Commands are:
#      ualert -- Update Alert Cache
#      ralert -- Rebuild Alert Cache
#      uip -- Update IP Cache
#      rip -- Rebuild IP Cache
#      uwhois -- Update Whois Cache
#      rwhois -- Rebuild Whois Cache
#      rtables -- Repair DB Tables

# Change below URL to match the one for your install
my($url);
$url = "http://127.0.0.1/~kjohnson/base";

################################################################################
## You should not need to change anything below these lines!
################################################################################

use strict;
use Getopt::Long;
use LWP::UserAgent;

my $ME;
my %opt;
($ME = $0) =~ s-.*/--;
# parse the commandline if any
my $usage = "$ME [-d ] [ -h ] [-p port] [-t timeout] [-u user -a password] command\n";
GetOptions (\%opt, "debug", "help", "port=i", "timeout=i", "user=s", "auth=s") || die $usage;
my $DEBUG	= $opt{"debug"} || 0;
my $HELP		= $opt{"help"} || '';
my $PORT		= $opt{"port"} || '';
my $TIMEOUT	= $opt{"timeout"} || 180;
my $USER		= $opt{"user"} || '';
my $PASS		= $opt{"auth"} || '';

if ($HELP ne '' ){
	print $usage;
	print "Valid Commands are:\n";
	print " ualert - Update Alert Cache\n";
	print " ralert - Rebuild Alert Cache\n";
	print "    uip - Update IP Cache\n";
	print "    rip - Rebuild IP Cache\n";
	print " uwhois - Update Whois Cache\n";
	print " rwhois - Rebuild Whois Cache\n";
	print "rtables - Repair Tables\n";
	exit();
}
die "$ME: no command given.\n$usage" if (@ARGV == 0);

my $command;
my $postvar;
my $resp;
$command = $ARGV[0];

if ($command eq "ualert") {
        $postvar = "Update Alert Cache";
    } elsif ($command eq "ralert") {
        $postvar = "Rebuild Alert Cache";
    } elsif ($command eq "uip") {
        $postvar = "Update IP Cache";
    } elsif ($command eq "rip") {
        $postvar = "Rebuild IP Cache";
    } elsif ($command eq "uwhois") {
        $postvar = "Update Whois Cache";
    } elsif ($command eq "rwhois") {
        $postvar = "Rebuild Whois Cache";
    } elsif ($command eq "rtables") {
        $postvar = "Repair Tables";
    } else {
        die("$ME: Invalid command!\n");
}

$url .= '/base_maintenance.php';

my $ua = LWP::UserAgent->new;
my $Agent = "BASE CLI/1.1";
if ( $DEBUG ){
	$Agent .= ' ';
}
$ua->agent($Agent);
$ua->timeout($TIMEOUT);
$resp = $ua->post( $url, {
	"submit" => "$postvar",
	"standalone" => "yes",
	"user" => "$USER",
	"pwd" => "$PASS"
});

if ($resp->code != 200 ){
	print "An Error occurred while posting the form!\n";
	print "The error is: " . $resp->status_line . "\n\n";
	if ( $DEBUG ){
		print "URI: ". $resp->base ."\n";
		print "Full response:\n";
		print $resp->as_string;
	}
}else{
	# Display some form of command ack.
}
